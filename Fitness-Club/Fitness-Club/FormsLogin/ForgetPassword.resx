<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblChengeOk.Text" xml:space="preserve">
    <value>Great, we're almost done. Please enter a new password.
Note! Your safety is important to us, so be sure to enter a password that meets these conditions:
1. Between 8 and 14 characters.
2. no spaces and char #.
3. At least one capital letter.
4. At least one lowercase letter.
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAA99JREFUeF7tmUloVEEQhqO4L+BFBFEQd0XEk5d48CbkKMkhLhePQVFxIwqiBDwJ
        6kUQohAMgkiMIi7gISBhMtknEkWCgogILnhQlCRq4lePejLp9Jt5M5nJJFgf/Lw33VXVVf2W7peUGYZh
        GIZhGIZhGIZhGEbh6erqmt3Z2VnO8Thq5rwPvef8J/rF+Vf0Ej1A52nb1dLSMk/dpy89PT2bKeYiRX3k
        OJqL8PmOGtF2DTd96Ojo2EIRD92i8hWTkECVo6OjM3SIqUlbW9syEq5Hv9MLKJSYhGfd3d1bdbipBYnt
        JsFPvsRD0T+EbqNq7pINqVRqoUjO6d+jfUOunyN5Z1xOJBLzdejSIgWQVIOT5DiRdBOFrla3SLBdg+1d
        198VNqn29vb16lYaent7V0kivgRD0f+H4wl1iQ1+p9TXG1f1DVWpy+RCcjsZ/HNaMlHKufgQmQRPvDHC
        ZoRj3mPkBQNWMfBgeiI+YdOkLv+Q9Z2+w6gdPdLmSLBpllgxdIVVYqa6FQ8GqqGwbLemFD/kPvPJZHIF
        7X1pNge1KxJermuxHQ59sqihqJPAAGedASNFcbfVLWBgYGAubWPeF/yu1O6MYHsn3S+TiHmjKJNA4HO+
        AaOEfbW6BvD7kMfutHZnBLu9jl9GMda1gm6aci1exDZ4nboH0JZ0bdCbOHt+3Se4vtlUp+4TI5/iRa2t
        rYs1RABtsmT5bO9kmwSJ5fGLoxoNkT8EqXOCxpI7AUzkd5+d6jWqld0kxxp0T90C8p0AxrypISYGgeQT
        1TtIlNxdGjE6fXY+YZpQtwDaNro2MXSLO2uWhpg4JJXro7BHXQPwP+qx8QrbMcsj74D9PrsMqi/5SoDt
        mGVQN0D9rp0r/FL9/f1z1C2A9tjLILpa0BXAhQSzbk9Vw+5KoN8OLzy2oZ5ztVeqeYA8SrTH3QgVt/gQ
        ijjjGXycsLurLv+gfYFO4nMkhQ3zWzZIx9zVQIqh/T7yxg+Fv3wPnFW3yYErdYBBs14ZkjupLuOQAjNd
        Mfxr3XiuiD/I6rFPXSYXBq9AmZY3SfAPOqUusdArXyu+brx00f8elatbaeBO2EISmZ7rUM3yYaNukch7
        A9s4t/1jbJeqW2khoQXoenqCEZJHRt7osrffyNt+kYiJ2SS3sfZle6y+UfzRSXnZ5QqJVZDgKyfhgojY
        I6iRiVquw01NSFb+CSKbng/pBeQrYsk75DHnO3SI6QEJy0RUcnwqRYQF5aAv+F1y9xLTEjZASyhGVowL
        6AnF9aJ36IeItrcckxybOB5h87ONZ7z4f94yDMMwDMMwDMMwDMMw/jvKyv4CFVbdUR8CKEIAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>